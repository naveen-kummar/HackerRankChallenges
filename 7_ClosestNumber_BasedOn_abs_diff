
// Complete the closestNumbers function below.
vector<int> closestNumbers(vector<int> arr) {

sort(begin(arr), end(arr));
int nLeastDiff = abs(arr[1] -  arr[0]);
vector<int> Smallest;

for(auto it = begin(arr) + 1; it != end(arr); it++)
{
  cout << *it << " - " << *(it - 1) << " = "
       << abs(*it - *(it - 1)) << endl;
 if ((abs(*it - *(it - 1))) < nLeastDiff) {
    Smallest.erase(Smallest.begin(), Smallest.end());
    Smallest.emplace_back(*(it-1));
    Smallest.emplace_back(*it);
    nLeastDiff = (abs(*it - *(it - 1)));
  } else if ((abs(*it - *(it-1))) == nLeastDiff) {
    Smallest.emplace_back(*(it - 1));
    Smallest.emplace_back(*it);
  }
}

/*
Smallest.emplace_back(arr[0]);
Smallest.emplace_back(arr[1]);
 [&nLeastDiff, &Smallest](int elem1, int elem2) {
   if ((abs(elem2 - elem1)) < nLeastDiff) {
     Smallest.erase(Smallest.begin(), Smallest.end());
     Smallest.emplace_back(elem1);
     Smallest.emplace_back(elem2);
   } else if ((abs(elem2 - elem1)) == nLeastDiff) {
     Smallest.emplace_back(elem1);
     Smallest.emplace_back(elem2);
   }
   return true;
 }
);*/

for(auto &i : Smallest)
{
    cout << i << " ";
}

cout << endl;

return Smallest;
}
