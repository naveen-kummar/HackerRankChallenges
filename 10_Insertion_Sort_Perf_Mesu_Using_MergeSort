#include <bits/stdc++.h>

using namespace std;

vector<string> split_string(string);
int MergeSort(vector<int> &arr);

    // Complete the insertionSort function below.
    int insertionSort(vector<int> arr) {
  int nTotalShifts = MergeSort(arr);
  return nTotalShifts;
    

}

int MergeSort(vector<int> &arr) {
  int n = arr.size();
  if (n == 1) 
    return 0;

  int n1 = n/2;
  int n2 = n-n1;
  cout << "n1: " << n1 << endl;
  cout << "n2: " << n2 << endl;

  vector<int> arr1;
  vector<int> arr2;
  copy_n(begin(arr), n1, back_inserter(arr1));
  copy_n(begin(arr) + n1, n2, back_inserter(arr2));

  cout << "Elements in arr1: ";
   for (auto &t : arr1) 
   { 
       cout << t << ", ";   
    }
    cout << endl;

    cout << "Elements in arr2: ";
    for (auto &t1 : arr2) {
      cout << t1 << ", ";
    }
    cout << endl;

    int nTotalShifts = MergeSort(arr1) + MergeSort(arr2);
    int l1 = 0;
    int l2 = 0;

    cout << "The Total elements n is: " << n << endl;
    for (int l = 0; l < n; l++)
    {
        if((l1 < n1) && ((l2 >= n2 )|| (arr1[l1] <= arr2[l2])))
        {
            arr[l] = arr1[l1];
            cout << "Copying " << arr1[l1] << ". From arr1 index " << l1 <<  " to arr into index  " << l << "." << endl;
            nTotalShifts += l2;
            cout << "nTotalShifts increased by " << l2 << ". nTotalShifts:" << nTotalShifts << endl; 
             l1 += 1;
        }
        else if(l2 < n2)
        {
            arr[l] = arr2[l2];
            cout << "Copying " << arr2[l2] << ". From arr2 index " << l2
                 << " to arr into index  " << l << "." << endl;
            l2 += 1;
        }
    }

    cout << "Elements in arr: ";
    for (auto &t3 : arr) {
      cout << t3 << ", ";
    }
    cout << endl;

    return nTotalShifts;
}
